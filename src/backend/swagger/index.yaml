openapi: 3.0.0
info: 
  description: |
    This is the REST API of the Servicify project. More information can be found at [https://github.com/citoplasme/PEI2020](https://github.com/citoplasme/PEI2020).
  
    In order to use this API you will need to use some authentication method: API Key or user Token.

    API keys can be generated with [POST /chaves](#/Chaves/post_chaves), being used in most of the GET requests. In this documentation, in order to  use the API Key, you have to choose from the authentication methods available: apiKeyQuery (API Key is part of the query string as 'apikey') or apikeyAuth (API Key is part of the 'Authorization' header, being that the user must use the format 'apikey <API Key>').

    The API Key has a duration of 30 days, being renewed on the route [PUT /chaves/renovar](#/Chaves/put_chaves_renovar), indicating the email associated with the Key.

    An User Token has to be obtained by logging in with an user ([POST /users/login](#/Utilizadores/post_users_login). This returns a Token, making every route available, depending on the level of access. In order to use this authentication method, there are two options: userQuery (the token is part of the query string 'token') or userAuth (the token is stored in the 'Authorization' header, following the format 'token <TOKEN>').

    If you have an user token, you do not need to use an API Key in order to access the GET requests accessible with the key. The token has a duration of 8 hours. After that, you will need to authenticate in the system once more with the route [POST /users/login](#/Utilizadores/post_users_login) and use the new token.

    The authentication methods available can be accessed when the lock is pressed. When you tap the button 'Authorize', every authentication method will be displayed. If you press the lock on a route, only the authentication method supported by that route will be displayed (permite/autoriza). 
    
    Besides this, the access levels and it's descriptions can be seen bellow:

    - Level -1 = Anyone (Everyone)  
    - Level 0 = API Keys
    - Level 1 = Regular user
    - Level 2 = Premium user
    - Level 3 = Service provider
    - Level 3.5 = Verified service provider
    - Level 4 = Premium service provider
    - Level 5 = Decision maker
    - Level 6 = Functional Administrator
    - Level 7 = Technological Administrator

    Please note that every user (levels 1 to 7) can access every route accessible by the API Keys (level 0).

    **Last update: 24/12/2020**
  version: 2.0.0
  title: REST API
  contact:
    name: Servicify
    email: a80874@alunos.uminho.pt
servers:
  - url: "{domain}/{version}"
    variables:
      domain:
        default: "http://localhost:7779"
        description: Domain
        enum:
          - "http://localhost:7779"
      version:
        description: API Version
        default: "v1"
        enum:
          - "v1"
tags:
  - name: Locations
    description: "List of locations"
  - name: Countries
    description: "List of countries"
  - name: Categories
    description: "Categories available on the platform"
  - name: Services
    description: "Services agreed on the platform"
  - name: Specializations
    description: "Specializations of the categories avaiable on the platform"
  - name: Auth
    description: "Stores where authentication requests were made."
  - name: Logs
    description: "Access record of the various users and API keys of the platform in the last 30 days."
  - name: Keys
    description: "API Keys of the platform."
  - name: Users
    description: "Users of the platform."
  - name: Aggregated Logs
    description: "Aggregation of logs present in the 'Logs' route set."
  - name: Parameters
    description: "REST API parameters."
paths: !!inc/dir [ 'paths' ] 
components: 
  schemas: !!inc/dir [ 'schemas', { excludeTopLevelDirSeparator: true, recursive: false }]
  securitySchemes:
    apiKeyQuery:
      type: apiKey
      in: query
      name: apikey
      description: 'Enter your API Key'
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Enter your API Key in the format: **apikey &lt;chaveAPI>**'
    userQuery:
      type: apiKey
      in: query
      name: token
      description: 'Enter your token'
    userAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Enter your token in the format: **token &lt;token>**'
  responses:
    UnauthorizedKey:
      description: You need to be authenticated or use an API key. Has your token or API key expired?
    UnauthorizedUser:
      description: You need to be authenticated. Has your token expired?
    PermissionsKey:
      description: You do not have sufficient permissions to request or your API key has been disabled.
    PermissionsUser:
      description: You do not have sufficient permissions to request.
    ValidationParameters:
      description: Some of the parameters are invalid or missing.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errosParametros'
  parameters:
    OutputFormatWithCSV:
      in: query
      name: fs
      required: false
      schema:
        type: string
        enum: [application/json, application/xml, text/csv, excel/csv]
      description: "Formato de saída do resultado"
  examples: !!inc/dir [ 'examples', {
      excludeTopLevelDirSeparator: true,
      recursive: false,
      #Se começar a ficar grande fazer whitelist em vez de blacklist
      #OU fazer a incluir exemplo a exemplo com inc/file e remover este inc/dir
      blacklist: [
        'examples/chaves/chaves_get_all.yaml',
        'examples/chaves/chaves_get_one.yaml',
        'examples/logs/Logs.yaml',
        'examples/users/User.yaml',
        'examples/users/UserLogin.yaml',
        'examples/parametros/Parametro.yaml',
        'examples/parametros/Parametros.yaml'
      ]
  }]
